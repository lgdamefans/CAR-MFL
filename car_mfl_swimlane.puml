@startuml CAR-MFL流程图

' 使用正确的泳道语法
skinparam swimlaneWidth 30
skinparam swimlaneWrapTitleWidth 30

' 定义参与者
actor "用户" as User
participant "主程序\n(main.py)" as Main
participant "服务器\n(ServerTrainer)" as Server
participant "多模态客户端\n(ClientClassificationTrainer)" as MMClient
participant "仅图像客户端\n(ClassificationTrainerRAG)" as ImgClient
participant "仅文本客户端\n(ClassificationTrainerRAG)" as TxtClient
database "公共数据集\n(MimicPublic)" as PublicData

' 定义泳道
|用户|
|主程序|
|服务器|
|多模态客户端|
|仅图像客户端|
|仅文本客户端|
|公共数据集|

' 流程开始
|用户|
start
:设置参数 (num_clients, img_clients, txt_clients, alpha等);
|主程序|
:初始化FedAvgInRAG引擎;
:设置随机种子;
:初始化wandb记录;

|服务器|
:初始化服务器模型;
:加载服务器数据集;

|主程序|
:设置客户端;

|多模态客户端|
:初始化多模态客户端;
:加载多模态数据集;

|仅图像客户端|
:初始化仅图像客户端;
:加载图像数据集;

|仅文本客户端|
:初始化仅文本客户端;
:加载文本数据集;

|公共数据集|
:加载公共数据集;

|主程序|
repeat :通信轮次循环;

  |服务器|
  :从公共数据集提取特征;
  note right: 提取图像和文本特征向量

  |主程序|
  :设置跨模态检索;

  |服务器|
  :分发模型到所有客户端;
  :在服务器数据上训练模型;

  |多模态客户端|
  :接收模型;
  :直接在多模态数据上训练;

  |仅图像客户端|
  :接收模型;
  :生成RAG映射;
  note right: 为每个图像找到最相似的公共数据集图像
  :检索缺失的文本模态;
  note right: 使用检索到的图像对应的文本
  :使用原始图像+检索文本训练;

  |仅文本客户端|
  :接收模型;
  :生成RAG映射;
  note right: 为每个文本找到最相似的公共数据集文本
  :检索缺失的图像模态;
  note right: 使用检索到的文本对应的图像
  :使用原始文本+检索图像训练;

  |服务器|
  :聚合所有客户端模型;
  note right: 使用加权平均，单模态客户端权重根据alpha调整
  :在验证集上评估聚合模型;
  :记录验证性能;
  :如果性能提升，保存最佳模型;

repeat while (完成所有通信轮次?) is (否)
->是;

|服务器|
:加载最佳模型;
:在测试集上评估最终性能;

|主程序|
:记录最终结果;

|用户|
:查看实验结果;

stop

@enduml